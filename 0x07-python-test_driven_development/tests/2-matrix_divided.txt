Tests on my matrix dividing function

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[2, 4, 6, 8], [10, 12, 14, 16]]
	>>> matrix_divided(matrix, 2)
	[[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
	>>> matrix_divided(4, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[2, 3, 4, 5], [10, 12]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size
	>>> matrix = [23, [10, 12, 14, 16]]
	>>> matrix_divided(matrix, 7)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[2, 4, 7, 9], [10, 12, 'h', 16]]
	>>> matrix_divided(matrix, 7)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[2, 4, 6, 8], [10, 12, 14, 16]]
	>>> matrix_divided(matrix, "string")
	Traceback (most recent call last):
		...
	TypeError: div must be a number
	>>> from math import inf
	>>> matrix_divided(matrix, div=float(inf))
	Traceback (most recent call last):
		...
	ValueError: The value of div is too large
	>>> matrix_divided(matrix, div=None)
	Traceback (most recent call last):
		...
	TypeError: div can not be empty
	>>> matrix_divided(matrix=[], div=None)
	Traceback (most recent call last):
		...
	TypeError: Neither of them can be empty
